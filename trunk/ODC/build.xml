<?xml version="1.0"?>

<!--
/////////////////////////////////////////////////////////////////////////////
// This file is part of the OPeNDAP Data Connector project.
//
// Copyright (c) 2007 OPeNDAP, Inc.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// vebuildrsion 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// You can contact OPeNDAP, Inc. at PO Box 112, Saunderstown, RI. 02874-0112.
/////////////////////////////////////////////////////////////////////////////
-->

        
<!-- Build file for OPeNDAP Data Connector (ODC) software -->

<project name="OPeNDAP Data Connector" default="all" basedir=".">

    <!-- Global Properties -->
	<!-- Compiler Settings -->

	<property name="compile.debug" value="on"/>
	<property name="compile.debuglevel" value="lines,vars,source"/>
	<property name="compile.deprecation" value="on"/>

	<property name="modern.compiler" value="modern"/>
	<property name="classic.compiler" value="classic"/>

	<!--  build.compiler: This is a "magic" property.
	     In the javac task, if the "compiler" property is not
	     explicitly set, then javac will use the value of this
	     property ("build.compiler") to set the compiler type.

	See the online ANT Users Manual.
	Read the section the comipler attribute of the javac task.
	http://ant.apache.org/manual/index.html
	-->
	<property name="build.compiler" value="${modern.compiler}"/>



	<!-- build.sysclasspath
	     This is a "magic" property. The value of the build.sysclasspath
	     property controls how the system classpath, ie. the classpath in
	     effect when Ant is run, affects the behaviour of classpaths in
	     Ant. The default behavior varies from Ant to Ant task.

	     The values and their meanings are:
	        only -   Only the system classpath is used and classpaths
	                 specified in build files, etc are ignored. This
	                 situation could be considered as the person running
	                 the build file knows more about the environment
	                 than the person writing the build file
	        ignore - The system classpath is ignored. This situation is
	                 the reverse of the above. The person running the
	                 build trusts the build file writer to get the build
	                 file right
	        last -   The classpath is concatenated to any specified
	                 classpaths at the end. This is a compromise, where
	                 the build file writer has priority.
	        first -  Any specified classpaths are concatenated to the
	                 system classpath. This is the other form of compromise
	                 where the build runner has priority.

	Excerpted from the online ANT users Manual
	http://ant.apache.org/manual/sysclasspath.html
	-->
	<property name="build.sysclasspath" value="ignore"/>
    
    <!-- Project directories -->
    <property name="src.dir"         location="src"/>
    <property name="doc.dir"         location="doc"/>
    <property name="lib.dir"         location="lib"/>
    <property name="bin.dir"         location="bin"/>
    <property name="dist.dir"        location="dist"/>
    <property name="base.dir"        location="base"/>

    <!-- Build Directories -->
    <property name="build.dir"       location="build"/>
    <property name="build.lib"       location="${build.dir}/lib"/>
    <property name="build.classes"   location="${build.dir}/classes"/>
    <property name="build.base"      location="${build.dir}/base"/>
    <property name="build.doc"       location="${build.dir}/doc"/>


    <property name="httpclient.lib"     value="commons-httpclient-3.0.1.jar"/>
    <property name="geotrans2.lib"      value="geotrans2.jar"/>
    <property name="regexp.lib"         value="gnu-regexp-1.1.4.jar"/>
    <property name="jaf.lib"            value="jaf-1.1_activation.jar"/>
    <property name="mail.lib"           value="javamail-1.4_mail.jar"/>
    <property name="mailapi.lib"        value="javamail-1.4_mailapi.jar"/>
    <property name="jdom.lib"           value="jdom-1.0.jar"/>   
    <property name="jogl.lib"           value="jogl.jar"/>    
    <property name="jython.lib"         value="jython-2.5.2.jar"/>
    <property name="netcdf.lib"         value="netcdf-4.0.jar"/>
    <property name="opendap.lib"        value="opendap-0.0.9.jar"/>
    
    <!-- library detritus. jhrg 3/6/12
    <property name="jogl.lib"           value="jogl.jar"/>
    <property name="getopt.lib"         value="gnu-getopt-1.0.6.jar"/>
    <property name="xercesImpl.lib"     value="xercesImpl-2.9.0.jar"/>
    <property name="xercesXmlApis.lib"  value="xml-apis-2.9.0.jar"/>
    <property name="jython.lib"         value="jython.jar"/>
    <property name="geotrans2.lib"      value="geotrans2.jar"/>
    <property name="netcdf.lib"         value="netcdf-4.0.jar"/> -->

    <target name="noop" description="Do Nothing Target">
        <echo level="info" message="no-op target in ${ant.file}"/>
    </target>

    <target name="show" description="Show build settings.">

        <echo level="info" message="Project Name:       ${ant.project.name}"/>
        <echo level="info" message="Project File:       ${ant.file}"/>
        <echo level="info" message=""/>
        <echo level="info" message="Project Directories:"/>
        <echo level="info" message="    src.dir:       ${src.dir}"/>
        <echo level="info" message="    doc.dir:       ${doc.dir}"/>
        <echo level="info" message="    lib.dir:       ${lib.dir}"/>
        <echo level="info" message="    resources.dir: ${resources.dir}"/>
        <echo level="info" message=""/>
        <echo level="info" message="Build Directories:"/>
        <echo level="info" message="    build.dir:      ${build.dir}"/>
        <echo level="info" message="    build.classes:  ${build.classes}"/>
        <echo level="info" message="    build.doc:      ${build.doc}"/>
        <echo level="info" message=""/>
        <echo level="info" message="Ant Properties:"/>
        <echo level="info" message="    ant.file:          ${ant.file}"/>
        <echo level="info" message="    ant.home:          ${ant.home}"/>
        <echo level="info" message="    ant.java.version:  ${ant.java.version}"/>
        <echo level="info" message="    ant.project.name:  ${ant.project.name}"/>
        <echo level="info" message="    ant.version:       ${ant.version}"/>
        <echo level="info" message="    basedir:           ${basedir}"/>
        <echo level="info" message="    user.name:         ${user.name}"/>
        <echo level="info" message="    user.home:         ${user.home}"/>
        <echo level="info" message="    java.home:         ${java.home}"/>
        <echo level="info" message=""/>

    </target>

<!-- ************************ Build Targets ************************** -->


    <!-- Defalut target compiles code from scratch -->
    <target name="all" depends="clean,init,compile" />

    <!-- Target "clean" cleans up ALL build products -->
    <target name="clean" description="Clean up ALL build products.">
        <delete dir="${build.dir}"/>
    </target>

    <!-- Target "init" prepares (creates if neccessary) the build dircteory tree. -->
    <target name="init" description="Prepare all build directories.">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.lib}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.doc}"/>

        <tstamp/>
        <echo level="info" message="time: ${TSTAMP}"/>
    </target>

    <!-- Defines CLASSPATH for the compile. Explicitly calls out each library required to build. -->
    <path id="compile.classpath">
        <fileset dir="${lib.dir}">
            <include name="${jdom.lib}"/>
            <include name="${jaf.lib}"/>
            <include name="${mail.lib}"/>
            <include name="${mailapi.lib}"/>
            <include name="${opendap.lib}"/>
            <include name="${httpclient.lib}"/>
            <include name="${regexp.lib}"/>
            <include name="${jython.lib}"/>
            <include name="${jogl.lib}"/>
            <include name="${geotrans2.lib}"/>
            <include name="${netcdf.lib}"/>
        </fileset>
    </path>
    
    <path id="run.classpath">
        <fileset dir="${lib.dir}">
            <include name="${jdom.lib}"/>
            <include name="${jaf.lib}"/>
            <include name="${mail.lib}"/>
            <include name="${mailapi.lib}"/>
            <include name="${opendap.lib}"/>
            <include name="${httpclient.lib}"/>
            <include name="${regexp.lib}"/>
            <include name="${jython.lib}"/>
            <include name="${jogl.lib}"/>
            <include name="${geotrans2.lib}"/>
            <include name="${netcdf.lib}"/>
        </fileset>
        <pathelement path="${build.classes}"/>
    </path>
    
    <!-- Compiles ODC source code files -->
    <target name="compile" depends="init">

        <echo message="AntFile: ${ant.file} Compiling Core Software"/>
        <echo message="Using the ${build.compiler} javac compiler"/>
        <echo message="AntFile: ${ant.file} Compiling ODC"/>

        <javac
            debug="${compile.debug}"
            debuglevel="${compile.debuglevel}"
            srcdir="${src.dir}"
            destdir="${build.classes}"
            compiler="${build.compiler}"
            deprecation="${compile.deprecation}">

            <include name="opendap/clients/odc/**/*.java"/>
            <classpath refid="compile.classpath" />
        </javac>
    </target>

    <!-- Run the ODC within the build tool -->
    <target name="runODC" depends="compile"
        description="Run the ODC">
        <copy todir="${build.base}">
            <fileset dir="${base.dir}"/>
        </copy>
        <copy todir="${build.classes}/opendap/clients/odc/images">
            <fileset dir="${src.dir}/opendap/clients/odc/images"/>
        </copy> 
        <copy todir="${build.classes}/opendap/clients/odc/icons">
            <fileset dir="${src.dir}/opendap/clients/odc/icons"/>
        </copy> 
        
        <java classname="opendap.clients.odc.ApplicationController" fork="true" dir="${build.classes}">
            <arg line="../../build/base" />
            <classpath refid="run.classpath" />
        </java>
    </target>
    
    <!-- Builds ODC Software distribution -->
	<target name="dist-java" depends="clean,compile">
		<copy todir="${build.classes}/opendap/clients/odc/icons">
			<fileset dir="${src.dir}/opendap/clients/odc/icons"></fileset>
		</copy>
		<copy todir="${build.classes}/opendap/clients/odc/images">
			<fileset dir="${src.dir}/opendap/clients/odc/images"></fileset>
		</copy>
		<copy todir="${build.classes}/opendap/clients/odc/TMAP/images">
			<fileset dir="${src.dir}/opendap/clients/odc/TMAP/images"></fileset>
		</copy>
		<copy todir="${build.classes}/opendap/clients/odc/doc">
			<fileset dir="${src.dir}/opendap/clients/odc/doc">
				<include name="odc-help.txt"/>
			</fileset>
		</copy>
		<copy todir="${build.classes}/opendap/clients/odc/coastline">
			<fileset dir="${src.dir}/opendap/clients/odc/coastline">
				<include name="gshhs_c.b"/>
			</fileset>
		</copy>
        <mkdir dir="${dist.dir}"/>
		<delete dir="${dist.dir}/ODC-${DSTAMP}"/>
		<waitfor maxwait="5" maxwaitunit="second">
			<not>
				<available file="${dist.dir}/ODC-${DSTAMP}/jre/bin/client/jvm.dll"/>
			</not>
		</waitfor>
		<mkdir dir="${dist.dir}/ODC-${DSTAMP}"/>
		<mkdir dir="${dist.dir}/ODC-${DSTAMP}/tools"/>
		<jar jarfile="${dist.dir}/ODC-${DSTAMP}/odc.jar" basedir="${build.classes}"/>
		<jar jarfile="${dist.dir}/ODC-${DSTAMP}/tools/IPSClient.jar" basedir="${build.IPSClient}"/>
		<copy todir="${dist.dir}/ODC-${DSTAMP}" >
			<fileset dir="${src.dir}/opendap/clients/odc">
				<include name="gazetteer.txt"/>
			</fileset>
			<fileset dir="../xml/datasets">
				<include name="datasets.xml"/>
			</fileset>
		</copy>


        <!-- Copy the libraries that ODC relies on... -->

		<copy file="${lib.dir}/${jdom.lib}"        tofile="${dist.dir}/ODC-${DSTAMP}/lib/${jdom.lib}"/>
		<copy file="${lib.dir}/${jaf.lib}"         tofile="${dist.dir}/ODC-${DSTAMP}/lib/${jaf.lib}" />
		<copy file="${lib.dir}/${mail.lib}"        tofile="${dist.dir}/ODC-${DSTAMP}/lib/${mail.lib}" />
		<copy file="${lib.dir}/${mailapi.lib}"     tofile="${dist.dir}/ODC-${DSTAMP}/lib/${mailapi.lib}" />
		<copy file="${lib.dir}/${jython.lib}"      tofile="${dist.dir}/ODC-${DSTAMP}/lib/${jython.lib}" />
		<copy file="${lib.dir}/${opendap.lib}"     tofile="${dist.dir}/ODC-${DSTAMP}/lib/${opendap.lib}" />
		<copy file="${lib.dir}/${opendap.lib}"     tofile="${dist.dir}/ODC-${DSTAMP}/lib/${jogl.lib}" />
		<copy file="${lib.dir}/${opendap.lib}"     tofile="${dist.dir}/ODC-${DSTAMP}/lib/${geotrans2.lib}" />
		<copy file="${lib.dir}/${opendap.lib}"     tofile="${dist.dir}/ODC-${DSTAMP}/lib/${netcdf.lib}" />

		<mkdir dir="${dist.dir}/ODC-${DSTAMP}/doc"/>
		<copy todir="${dist.dir}/ODC-${DSTAMP}/doc" >
			<fileset dir="${src.dir}/opendap/clients/odc/doc" >
				<include name="odc-help.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="dist-windows" depends="dist-java">
		<copy todir="${dist.dir}/ODC-${DSTAMP}" >
			<fileset dir="${basedir}/launcher" >
				<include name="ODC.exe"/>
				<include name="startup.ini"/>
			</fileset>
			<fileset dir="${src.dir}/opendap/clients/odc/doc" >
				<include name="install-windows.txt"/>
			</fileset>
		</copy>
		<copy todir="${dist.dir}/ODC-${DSTAMP}/tools" >
			<fileset dir="${src.dir}/opendap/clients/excel">
				<include name="OPeNDAP.xla"/>
			</fileset>
		</copy>
	</target>

	<target name="dist-unix" depends="dist-java">
		<copy todir="${dist.dir}/ODC-${DSTAMP}" >
			<fileset dir="${src.dir}/opendap/clients/odc/doc" >
				<include name="install-unix.txt"/>
			</fileset>
		</copy>
		<mkdir dir="${dist.dir}/ODC-${DSTAMP}/tools"/>
	</target>

    <target name="dist-mac" depends="dist-java">
        <mkdir dir="${dist.dir}/ODC-${DSTAMP}/tools"/>
    </target>

    <!--
    <target name="dist-classic-windows">
        <antcall target="dist-windows" inheritAll="false" >
            <param name="build.compiler" value="${classic.compiler}"/>
        </antcall>
    </target>

    <target name="dist-classic-unix">
        <antcall target="dist-unix" inheritAll="false" >
            <param name="build.compiler" value="${classic.compiler}"/>
        </antcall>
    </target>

    <target name="dist-classic-mac">
        <antcall target="dist-mac" inheritAll="false" >
            <param name="build.compiler" value="${classic.compiler}"/>
        </antcall>
    </target>
    -->
</project>

